rule all:
    input:
      expand("{outfolder}/fa", outfolder=config["outfolder"]),
      expand("{outfolder}/fa.log", outfolder=config["outfolder"]),
      expand("{outfolder}/fa_likelihood.tsv", outfolder=config["outfolder"]),
      expand("{outfolder}/fa_factors.tsv", outfolder=config["outfolder"]),

      expand("{outfolder}/fa-likelihood_path.png", outfolder=config["outfolder"]),
      expand("{outfolder}/fa-factors-variance_explained.png", outfolder=config["outfolder"]),
      expand("{outfolder}/fa-factors-biplot.png", outfolder=config["outfolder"]),

      expand("{outfolder}/fa-sample.tsv", outfolder=config["outfolder"]),
      expand("{outfolder}/fa-sample.log", outfolder=config["outfolder"]),
      expand("{outfolder}/fa-sample-feature_distributions", outfolder=config["outfolder"]),

      expand("{outfolder}/outlier-removal.log", outfolder=config["outfolder"]),
      expand("{outfolder}/outlier-removal", outfolder=config["outfolder"]),

      expand("{outfolder}/kmeans-fit.log", outfolder=config["outfolder"]),
      expand("{outfolder}/kmeans-plot.log", outfolder=config["outfolder"]),
      expand("{outfolder}/kmeans-transform.log", outfolder=config["outfolder"])


rule fa:
    input:
        expand("{infile}", infile=config["infile"])
    output:
        expand("{outfolder}/fa_likelihood.tsv", outfolder=config["outfolder"]),
        expand("{outfolder}/fa.log", outfolder=config["outfolder"]),
        expand("{outfolder}/fa_factors.tsv", outfolder=config["outfolder"]),
        out = expand("{outfolder}/fa", outfolder=config["outfolder"])
    run:
        params = " ".join([x for x in config["sparkparams"]])
        cmd = """{} --master {} \
                              {} \
                              2-dimension_reduction/1a-factor_analysis-spark.py \
                              -c {} \
                              -f {} \
                              -o {}""".format(
            config["spark"], config["sparkip"], params, config["factors"], input, output.out)
        shell("{cmd}")


rule fa_plot:
    input:
        expand("{outfolder}/fa", outfolder=config["outfolder"])
    output:
        expand("{outfolder}/fa-likelihood_path.png", outfolder=config["outfolder"]),
        expand("{outfolder}/fa-factors-variance_explained.png", outfolder=config["outfolder"]),
        expand("{outfolder}/fa-factors-biplot.png", outfolder=config["outfolder"])
    shell:
        "2-dimension_reduction/1b-factor_analysis_plot.R {config[outfolder]}"


rule fa_sample:
    input:
        expand("{outfolder}/fa", outfolder=config["outfolder"])
    output:
        expand("{outfolder}/fa-sample.log", outfolder=config["outfolder"]),
        out = expand("{outfolder}/fa-sample.tsv", outfolder=config["outfolder"]),
    run:
        params = " ".join([x for x in config["sparkparams"]])
        cmd = """{} --master {} \
                             {} \
                             2-dimension_reduction/2a-sample_fa-spark.py \
                             -f {} \
                             -o {}""".format(
            config["spark"], config["sparkip"], params, input, output.out)
        shell("{cmd}")


rule fa_sample_plot:
    input:
        expand("{outfolder}/fa-sample.tsv", outfolder=config["outfolder"])
    output:
        expand("{outfolder}/fa-sample-feature_distributions", outfolder=config["outfolder"])
    shell:
        "2-dimension_reduction/2b-plot_feature_distribution.R {input}"


rule outliers:
    input:
        expand("{outfolder}/fa", outfolder=config["outfolder"]),
    output:
        expand("{outfolder}/outlier-removal.log", outfolder=config["outfolder"]),
        out = expand("{outfolder}/outlier-removal", outfolder=config["outfolder"])
    run:
        params = " ".join([x for x in config["sparkparams"]])
        cmd = """{} --master {} \
                              {} \
                              2-dimension_reduction/3-remove_outliers.py \
                              -f {} \
                              -o {}""".format(
            config["spark"], config["sparkip"], params, input, output.out)
        shell("{cmd}")


rule clustering_fit:
    input:
        expand("{outfolder}/outlier-removal", outfolder=config["outfolder"])
    output:
        expand("{outfolder}/kmeans-fit.log", outfolder=config["outfolder"])
        expand("{outfolder}/kmeans-fit-K{}", outfolder=config["outfolder"], center=config["centers"])
      wildcard_constraints:
          center="\d+"
    shell:
        "echo {config[sparkip]} > {output}"

rule clustering_transform:
    input:
        expand("{outfolder}/kmeans-fit.log", outfolder=config["outfolder"])
    output:
        transform=expand("{outfolder}/kmeans-transform.log", outfolder=config["outfolder"]),
        plot=expand("{outfolder}/kmeans-plot.log", outfolder=config["outfolder"])
    run:
        shell("cat {input} > {output.plot}"),
        shell("cat {input} > {output.transform}")
