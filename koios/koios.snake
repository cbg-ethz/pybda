import typing
from snakemake.logging import logger


from koios import dirname
from koios import KoiosConfig
from koios.globals import CLUSTERING__
from koios.globals import CLUSTERING_INFILE__
from koios.globals import DEBUG__
from koios.globals import DIM_RED__
from koios.globals import DIM_RED_INFILE__
from koios.globals import FAMILY__
from koios.globals import FACTOR_ANALYSIS__
from koios.globals import FEATURES__
from koios.globals import INFILE__
from koios.globals import KPCA__
from koios.globals import MAHA__
from koios.globals import META__
from koios.globals import METHODS__
from koios.globals import N_COMPONENTS__
from koios.globals import OUTFOLDER__
from koios.globals import OUTLIERS__
from koios.globals import OUTLIERS_INFILE__
from koios.globals import PCA__
from koios.globals import PVAL__
from koios.globals import REGRESSION_INFILE__
from koios.globals import REGRESSION__
from koios.globals import RESPONSE__
from koios.globals import REQUIRED_ARGS__
from koios.globals import SPARKPARAMS__
from koios.globals import SPARKIP__
from koios.globals import SPARK__
from koios.logger import logger_format

logger.propagate = True
koios_config = KoiosConfig(config)


def _submit_dim_red(method, input, out):
    params = " ".join([x for x in koios_config[SPARKPARAMS__]]),
    cmd = """{} --master {} {} {} {} {} {}""".format(
        koios_config[SPARK__],
        koios_config[SPARKIP__],
        params,
        method,
        koios_config[N_COMPONENTS__],
        input,
        out),
    if DEBUG__ in koios_config:
        shell("echo -e '\033[1;33m Submitting job {cmd} \033[\033[0m'")
    shell("{cmd}")


rule factor_analysis:
    input:
        expand("{infile}", infile=koios_config[INFILE__])
    output:
        out = directory(expand("{outfolder}/{dimred}",
                               outfolder=koios_config[OUTFOLDER__],
                               dimred=FACTOR_ANALYSIS__))
    params:
        fa = os.path.join(dirname(), "factor_analysis.py")
    run:
        _submit_dim_red(params.fa, input, output.out)


rule pca:
    input:
        expand("{infile}", infile=koios_config[INFILE__])
    output:
        out = directory(expand("{outfolder}/{dimred}",
                               outfolder=koios_config[OUTFOLDER__],
                               dimred=PCA__))
    params:
        pca = os.path.join(dirname(), "pca.py")
    run:
        _submit_dim_red(pca, input, output.out)

rule kpca:
    input:
        expand("{infile}", infile=koios_config[INFILE__])
    output:
        out = directory(expand("{outfolder}/{dimred}",
                               outfolder=koios_config[OUTFOLDER__],
                               dimred=KPCA__))
    params:
        pca = os.path.join(dirname(), "kpca.py")
    run:
        _submit_dim_red(pca, input, output.out)

rule outliers:
    input:
        expand("{outfolder}/{dimred}",
               outfolder=koios_config[OUTFOLDER__],
               dimred=koios_config[DIM_RED__])
    output:
        out = directory(expand("{outfolder}/{outlier}",
                               outfolder=koios_config[OUTFOLDER__],
                               outlier=MAHA__))
    params:
        params = " ".join([x for x in config[SPARKPARAMS__]]),
        outr = os.path.join(dirname(), "outliers.py"),
        pval = koios_config[PVAL__] if PVAL__ in koios_config else 0.05
    run:
        cmd = """{} --master {} {} {} {} {} {}""".format(
            config["spark"],
            config["sparkip"],
            params.params,
            params.outr,
            input,
            output.out,
            params.pval)
        if DEBUG__ in koios_config:
            shell("echo -e '\033[1;33m Submitting job {cmd} \033[\033[0m'")
        shell("{cmd}")

rule glm:
    input:
        expand("{infile}", infile=koios_config[REGRESSION_INFILE__])
    output:
        expand("{outfolder}/{regression}-{out}.tsv",
               outfolder=koios_config[OUTFOLDER__],
               regression=koios_config[REGRESSION__],
               out=["table", "statistics"])
    params:
        out = os.path.join(
            koios_config[OUTFOLDER__], koios_config[REGRESSION__]),
        reg = os.path.join(dirname(), "glm.py"),
        params = " ".join([x for x in koios_config[SPARKPARAMS__]])
    run:
        cmd = """{} --master {} {} {} {} {} {} {} {} {}""".format(
            koios_config[SPARK__],
            koios_config[SPARKIP__],
            params.params,
            params.reg,
            input,
            koios_config[META__],
            koios_config[FEATURES__],
            koios_config[RESPONSE__],
            koios_config[FAMILY__],
            params.out)
        if DEBUG__ in koios_config:
            shell("echo -e '\033[1;33m Submitting job {cmd} \033[0m'")
        shell("{cmd}")
