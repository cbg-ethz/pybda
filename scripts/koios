#!/usr/bin/env python3

# Copyright (C) 2018 Simon Dirmeier
#
# This file is part of koios.
#
# koios is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# koios is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with koios. If not, see <http://www.gnu.org/licenses/>.
#
# @author = 'Simon Dirmeier'
# @email = 'simon.dirmeier@bsse.ethz.ch'


import logging
import subprocess
import click
import yaml
import os

logger = logging.getLogger(__name__)
logger.setLevel(logging.INFO)
frmtr = logging.Formatter(
  '[%(levelname)-1s/%(processName)-1s/%(name)-1s]: %(message)s')


@click.group()
def cli():
    logging.basicConfig(
      format='[%(levelname)-1s/%(processName)-1s/%(name)-1s]: %(message)s')


@cli.command()
@click.argument("config", type=str)
@click.argument("spark", type=str)
def dimension_reduction(config, spark):
    """
    Computes a dimension reduction from a CONFIG in a SPARK session.
    """

    dr = "dimension_reduction"
    with open(config, 'r') as fh:
        conf_ = yaml.load(fh)
    if dr not in conf_.keys():
        raise ValueError("'{}' argument not found in config file".format(dr))

    from koios import snake_file
    subprocess.run(
      ["snakemake",
       conf_[dr],
       "-s", snake_file(),
       "--configfile", config,
       "--config", "sparkip=" + spark]
    )


@cli.command()
@click.argument("config", type=str)
@click.argument("spark", type=str)
@click.argument("input", type=str)
@click.argument("output", type=str)
@click.argument("n", type=int)
@click.option("--split", type=bool, default=True)
def sample(config, spark, input, output, n, split):
    """
    Computes a dimension reduction from a CONFIG in a SPARK session.
    """

    from koios import snake_file
    subprocess.run(
      ["snakemake",
       "sample",
       "-s", snake_file(),
       "--configfile", config,
       "--config",
       "sparkip=" + spark,
       "input=" + input,
       "output=" + output,
       "n=" + n,
       "split=" + split
       ]
    )


if __name__ == "__main__":
    cli()
